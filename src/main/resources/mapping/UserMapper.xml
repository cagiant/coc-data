<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coc.data.mapper.UserMapper">
    <select id="selectValidUser" resultMap="ResultMapWithBLOBs">
        select * from user where open_id = #{openId} and session_key = #{sessionKey}
    </select>
    <insert id="insertOnDuplicateKeyUpdate">
        insert into user (
          nick_name, male,
          lang, country, province, city,
          avatar_url, open_id, union_id, session_key) VALUES
        (#{user.nickName}, #{user.male},
         #{user.lang}, #{user.country}, #{user.province}, #{user.city},
         #{user.avatarUrl}, #{user.openId}, #{user.unionId}, #{user.sessionKey})
         on duplicate key update
            nick_name = values(nick_name),
            male = values(male),
            lang = values(lang),
            country = values(country),
            province = values(province),
            city = values(city),
            avatar_url = values(avatar_url),
            open_id = values(open_id),
            union_id = values(union_id),
            session_key = values(session_key)
    </insert>
    <select id="selectByOpenId" resultMap="ResultMapWithBLOBs">
        select * from user where open_id = #{openId}
    </select>
    <update id="saveUserSetting">
        update user set setting = #{setting} where open_id = #{openId} and is_deleted = 0
    </update>
    <select id="selectByMemberTags" resultType="com.coc.data.dto.user.PlayerUserWarInfoDTO">
        select u.nick_name `userName`,
               u.open_id `openId`,
               p.tag `playerTag`,
               p.name `playerName`,
               u.setting `userSetting`
        from user u
            join user_player_relation upr on u.id = upr.user_id and u.is_deleted = 0
            join player p on p.id = upr.player_id
            where p.tag in (
                <foreach collection="list" item="item" separator=",">
                    #{item}
                </foreach>)
            and u.is_deleted = 0
    </select>
    <select id="getThreeStarPlayerInfoInCertainTime" resultType="com.coc.data.dto.user.PlayerUserWarInfoDTO">
        select u.nick_name      `userName`,
               u.open_id        `openId`,
               u.setting        `userSetting`,
               tmp.attack_order `attackOrder`,
               tmp.map_position `opponentRankToAttack`,
               tmp.tag          `playerTag`,
               tmp.name         `playerName`,
               c.name           `clanName`,
               tmp.create_time  `createTime`
        from (select cwl.attack_order,
                     opponent.map_position,
                     attacker.member_tag,
                     attacker.clan_tag,
                     cwl.create_time,
                     p.tag,
                     p.name
              from clan_war_log cwl
                       join clan_war_member attacker
                            on attacker.war_tag = cwl.war_tag and attacker.member_tag = cwl.attacker_tag
                       join player p on p.tag = attacker.member_tag and p.is_deleted = 0
                       join clan_war_member opponent
                            on opponent.war_tag = cwl.war_tag and opponent.member_tag = cwl.defender_tag
              where cwl.war_tag = #{warTag}
                and cwl.create_time > #{date}
                and cwl.star = 3) tmp
                 join clan_war_member friends on friends.war_tag = #{warTag} and friends.clan_tag = tmp.clan_tag
                 join clan c on friends.clan_tag = c.tag
                 join player p on friends.member_tag = p.tag and p.is_deleted = 0
                 join user_player_relation upr on p.id = upr.player_id and p.is_deleted = 0 and upr.is_deleted = 0
                 join user u on upr.user_id = u.id and u.is_deleted = 0
    </select>
</mapper>